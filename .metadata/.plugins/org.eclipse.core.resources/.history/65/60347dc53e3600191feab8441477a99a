package module1;

import processing.core.*;

import java.util.*;

import com.jogamp.opengl.math.geom.Frustum.Location;

import de.fhpotsdam.unfolding.UnfoldingMap;
import de.fhpotsdam.unfolding.data.Feature;
import de.fhpotsdam.unfolding.data.PointFeature;
import de.fhpotsdam.unfolding.marker.Marker;
import de.fhpotsdam.unfolding.marker.SimplePointMarker;
import de.fhpotsdam.unfolding.providers.Google;
import de.fhpotsdam.unfolding.providers.Microsoft;
import de.fhpotsdam.unfolding.utils.MapUtils;

public class EarthquakeCityMap extends PApplet {
	private UnfoldingMap map;
	
	public void setup() {
		size(950, 600, OPENGL);
		//map = new UnfoldingMap(this, 200,50,700,500, new Google.GoogleMapProvider());
		map = new UnfoldingMap(this, 200,50,700,500, new Microsoft.MicrosoftProvider());	
		map.zoomToLevel(2);
		MapUtils.createDefaultEventDispatcher(this, map);
	/*	
		Location valLoc = new Location (61.02f, -147.65f);
		Feature alaskaEq= new PointFeature(valLoc);
		alaskaEq.addProperty("title","Great Alaska");
		alaskaEq.addProperty("magnitude","9.2");
		alaskaEq.addProperty("date","Mar 28, 1964");
		alaskaEq.addProperty("year","1964");

		Location valLoc2 = new Location (3.30f, 95.78f);
		Feature sumatraEq= new PointFeature(valLoc2);
		sumatraEq.addProperty("title","Sumatra");
		sumatraEq.addProperty("magnitude","9.1");
		sumatraEq.addProperty("date","Dec 26, 2004");
		sumatraEq.addProperty("year","2004");
*/		
		Location valLoc1 = new Location (-38.14f, -73.03f);
		Feature valEq= new PointFeature(valLoc1);
		valEq.addProperty("title","Valdivia, Chile");
		valEq.addProperty("magnitude","9.5");
		valEq.addProperty("date","May 22, 1960");
		valEq.addProperty("year","1960");
		
		
		
		//Marker valMK = new SimplePointMaker(valLoc,valEQ.getProperties());
		//Marker val = new SimplePointMarker(valLoc);
		
		List<PointFeature> bigEqs = new ArrayList<PointFeature>();
		bigEqs.add(valEq);
//		bigEqs.add(alaskaEq);
//		bigEqs.add(sumatraEq);
		//bigEqs.add(japanEq);
		//bigEqs.add(kamchatkaEq);
		
		List<Marker> markers = new ArrayList<Marker>();
		for (PointFeature eq: bigEqs) {
			markers.add(new SimplePointMarker(eq.getLocation(),eq.getProperties()));
		}
		//map.addMarker(valMK);
		//map.addMarker(val);	
		map.addMarker(markers);
			
	}
	
	
	
	public void draw() {
		background(10);
		map.draw();
		//addKey();
	}

}
